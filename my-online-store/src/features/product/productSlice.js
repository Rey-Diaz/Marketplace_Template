// src/features/product/productSlice.js

import { createSlice } from '@reduxjs/toolkit';

// Initial state could also be an empty array if you're fetching products from an API
const initialState = {
  items: [
    // Populate with any initial product data or leave empty to fetch from an API
    {
      id: '1',
      name: 'Product 1',
      description: 'Description for product 1',
      price: 100,
      // image: 'path-to-product-1-image.jpg'
    },
    // ... more products
  ],
  // Add more fields to the state as needed for your application
};

export const productSlice = createSlice({
  name: 'products',
  initialState,
  reducers: {
    // Define reducers to handle updating the products state
    // For example, adding a new product could look like this:
    addProduct: (state, action) => {
      state.items.push(action.payload);
    },
    // If you had functionality to remove or update a product, you would add reducers for those here
  },
});

// Export the custom reducers as actions
export const { addProduct } = productSlice.actions;

// The reducer generated by createSlice is what you'd use in your store configuration
export default productSlice.reducer;
